{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Text","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","iterateLeft","bind","assertThisInitialized","iterateRight","onChange","state","currentText","loveLetters","text","day","input","setState","event","target","value","react_default","a","createElement","Fragment","console","log","id","onClick","length","type","class","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"quDA8CeA,cAzCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKU,aAAeV,EAAKU,aAAaF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKW,SAAWX,EAAKW,SAASH,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKY,MAAQ,CACTC,YAAaC,EAAYC,KAAK,GAC9BC,IAAK,EACLC,MAAO,IARIjB,6EAYfG,KAAKe,SAAS,CAACL,YAAaC,EAAYC,KAAKZ,KAAKS,MAAMI,IAAM,GAAIA,IAAKb,KAAKS,MAAMI,IAAM,2CAGxFb,KAAKe,SAAS,CAACL,YAAaC,EAAYC,KAAKZ,KAAKS,MAAMI,KAAMA,IAAKb,KAAKS,MAAMI,IAAM,qCAEhFG,GACJhB,KAAKe,SAAS,CAACL,YAAaV,KAAKS,MAAMC,YAAaG,IAAKb,KAAKS,MAAMI,IAAKC,MAAOE,EAAMC,OAAOC,yCAG7F,MAAyB,kBAArBlB,KAAKS,MAAMK,MAELK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACLC,QAAQC,IAAIxB,KAAKS,OAClBU,EAAAC,EAAAC,cAAA,KAAGI,GAAG,cAAN,IAAqBzB,KAAKS,MAAMC,YAAhC,KACAS,EAAAC,EAAAC,cAAA,OAAKI,GAAG,eACPzB,KAAKS,MAAMI,IAAM,EAAI,EAAIM,EAAAC,EAAAC,cAAA,UAAQI,GAAG,aAAaC,QAAS1B,KAAKI,aAAtC,QAAmEe,EAAAC,EAAAC,cAAA,OAAKI,GAAG,eACpGzB,KAAKS,MAAMI,IAAMF,EAAYC,KAAKe,OAASR,EAAAC,EAAAC,cAAA,UAAQI,GAAG,aAAaC,QAAS1B,KAAKO,cAAtC,QAAoEY,EAAAC,EAAAC,cAAA,OAAKI,GAAG,kBAKxHF,QAAQC,IAAIxB,KAAKS,OACTU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACZH,EAAAC,EAAAC,cAAA,SAAOb,SAAUR,KAAKQ,SAAUoB,KAAK,WAAWC,MAAM,sBApCzCC,IAAMC,WCQVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAA9B,KAAA,UAAqBgC,KAAK,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP1B,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,WAAP,KACE3B,EAAAC,EAAAC,cAAC0B,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.cbca56ec.chunk.js","sourcesContent":["import './App.css';\nimport loveLetters from './loveLetters.json';\nimport React from 'react';\n\nclass Text extends React.Component {\n  constructor(props) {\n      super(props);\n      this.iterateLeft = this.iterateLeft.bind(this);\n      this.iterateRight = this.iterateRight.bind(this);\n      this.onChange = this.onChange.bind(this);\n      this.state = {\n          currentText: loveLetters.text[0],//loveLetters.text[loveLetters.text.length - 1],\n          day: 1,//loveLetters.text.length,\n          input: ''\n      }\n  }\n  iterateLeft() {\n      this.setState({currentText: loveLetters.text[this.state.day - 2], day: this.state.day - 1}) \n  }\n  iterateRight() {\n      this.setState({currentText: loveLetters.text[this.state.day], day: this.state.day + 1}) \n  }\n onChange(event) {\n      this.setState({currentText: this.state.currentText, day: this.state.day, input: event.target.value})\n    }\n  render() {\n      if (this.state.input === \"nathanlovesme\") \n      {\n        return (<>\n          {console.log(this.state)}\n          <p id=\"heart-text\">\"{this.state.currentText}\"</p>\n          <div id=\"loveButtons\">\n          {this.state.day - 1 > 0 ? <button id=\"prevButton\" onClick={this.iterateLeft}>Last</button> : <div id=\"prevButton\"/>}\n          {this.state.day < loveLetters.text.length ? <button id=\"nextButton\" onClick={this.iterateRight}>Next</button> : <div id=\"nextButton\"/>}\n          </div>\n          </>\n      )\n      } else { \n          console.log(this.state)\n          return (<>\n      <input onChange={this.onChange} type=\"password\" class=\"passcode\" />\n      </>)\n      }\n  }\n}\n\nexport default Text;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}